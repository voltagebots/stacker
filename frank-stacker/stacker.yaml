# this is an minimal `stack config` file.
# http://stacker.readthedocs.io/en/latest/config.html
# 

namespace: ${namespace}

mappings:
  AmiMap:
    us-west-1:
      NAT: ami-ad227cc4
      ubuntu1404:  ami-005c06c6de69aee84
      bastion: ami-74e27e1c
    us-west-2:
      NAT: ami-290f4119
      ubuntu1404: ami-5189a661
      bastion: ami-5189a661

# The bucket where stacker stores generated CloudFormation templates.
# http://stacker.readthedocs.io/en/latest/config.html#s3-bucket
stacker_bucket: firststack

# This sets the syspath to include the local path, which allows access to the
# blueprints in the blueprints directory.
# http://stacker.readthedocs.io/en/latest/config.html#module-paths
sys_path: .

# The stacks key accepts a list of stack declarations.
# http://stacker.readthedocs.io/en/latest/config.html#stacks
stacks:

  # This is an example minimal stack.
  # The 'name' and 'class_path' keys are required.
  # The 'name' value must be unique.
  # The 'class_path' points at a Python stacker "blueprint" class.
  - name: ASG
    class_path: blueprints.touch.AutoscalingGroup
    region: us-west-1
    variables:
      ImageName: ubuntu1404
      SshKeyName: default
      AZCount: 2
      PublicSubnets:
        - 10.0.101.0/24
        - 10.0.102.0/24
      PrivateSubnets:
        - 10.0.1.0/24
        - 10.0.2.0/24
        - 10.0.3.0/24

    # when we execute stacker with this `stack config`, it will automatically run the
    # blueprint code to produce a CloudFormation JSON template, upload it to s3, and
    # trigger a CloudFormation create/update.
